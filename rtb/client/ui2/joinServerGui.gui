exec("./serverfilter.gui");
function querysort(%a){JS_serverList.sort(%a);}
//---------------------------------------- 
function JoinServerGui::onWake() 
{ 
   // Double check the status. Tried setting this the control 
   // inactive to start with, but that didn't seem to work. 
   JS_joinServer.setActive(JS_serverList.rowCount() > 0);
   JS_statusText.setText("Requesting Server Information...");
   JS_statusBar.setValue(0);
   queryLANServers( 
      28005,      // lanPort for local queries 
      0,          // Query flags 
      $Client::GameTypeQuery,       // gameTypes 
      $Client::MissionTypeQuery,    // missionType 
      0,          // minPlayers 
      100,        // maxPlayers 
      0,          // maxBots 
      2,          // regionMask 
      0,          // maxPing 
      100,        // minCPU 
      0           // filterFlags 
      ); 
   queryMasterServer( 
      0,          // Query flags 
      $Client::GameTypeQuery,       // gameTypes 
      $Client::MissionTypeQuery,    // missionType 
      0,          // minPlayers 
      100,        // maxPlayers 
      0,          // maxBots 
      2,          // regionMask 
      0,          // maxPing 
      100,        // minCPU 
      0           // filterFlags 
      ); 
}    

//---------------------------------------- 
function JoinServerGui::query(%this) 
{ 
   queryLANServers( 
      28005,      // lanPort for local queries 
      0,          // Query flags 
      $Client::GameTypeQuery,       // gameTypes 
      $Client::MissionTypeQuery,    // missionType 
      0,          // minPlayers 
      100,        // maxPlayers 
      0,          // maxBots 
      2,          // regionMask 
      0,          // maxPing 
      100,        // minCPU 
      0           // filterFlags 
      ); 
   queryMasterServer( 
      0,          // Query flags 
      $Client::GameTypeQuery,       // gameTypes 
      $Client::MissionTypeQuery,    // missionType 
      0,          // minPlayers 
      100,        // maxPlayers 
      0,          // maxBots 
      2,          // regionMask 
      0,          // maxPing 
      100,        // minCPU 
      0           // filterFlags 
      ); 
   $Pref::Client::ServerSelected = 0;
} 

//---------------------------------------- 
function JoinServerGui::queryLan(%this) 
{ 
   queryLANServers( 
      28000,      // lanPort for local queries 
      0,          // Query flags 
      $Client::GameTypeQuery,       // gameTypes 
      $Client::MissionTypeQuery,    // missionType 
      0,          // minPlayers 
      100,        // maxPlayers 
      0,          // maxBots 
      2,          // regionMask 
      0,          // maxPing 
      100,        // minCPU 
      0           // filterFlags 
      ); 
} 

//---------------------------------------- 
function JoinServerGui::cancel(%this) 
{ 
   cancelServerQuery(); 
} 


//---------------------------------------- 
function JoinServerGui::join(%this) 
{ 
   defapp2();
   cancelServerQuery();
   JS_statusText.setText("Connecting to Server...");
   JS_statusBar.setValue(1);
   %id = JS_serverList.getSelectedId(); 

   // The server info index is stored in the row along with the 
   // rest of displayed info. 
   %index = getField(JS_serverList.getRowTextById(%id),6); 
   if (setServerInfo(%index)) { 
      %conn = new GameConnection(ServerConnection); 
      %conn.setConnectArgs($pref::Player::Name); 
      %conn.setJoinPassword($Client::Password); 
      %conn.connect($ServerInfo::Address); 
   } 
} 

function JoinServerGui::serverinfo(%this)
{
   %id = JS_serverList.getSelectedId();
   ServerMission.setText(" ");
   ServerInfo.setText(" ");

   %missionname = getField(JS_serverList.getRowTextById(%id),6);
   %missionname = strreplace(%missionname,"rtb/data/missions/","");
   ServerMission.setText(%missionname);
   ServerInfo.setText(getField(JS_serverList.getRowTextById(%id),5));
   ServerIP.setText(getField(JS_serverList.getRowTextById(%id),4));
   ServerName.setText(getField(JS_serverList.getRowTextById(%id),1));
}
//---------------------------------------- 
function JoinServerGui::joinwithIP(%this) 
{ 
   cancelServerQuery(); 
   JS_statusText.setText("Query Canceled!");
   JS_statusBar.setValue(1);

   // The server info index is stored in the row along with the 
   // rest of displayed info. 

   %conn = new GameConnection(ServerConnection); 
   %conn.setConnectArgs($pref::Player::Name); 
   %conn.setJoinPassword($Client::Password); 
   %conn.connect($Client::JoinIP); 
} 

//---------------------------------------- 
function JoinServerGui::exit(%this) 
{ 
   cancelServerQuery(); 
   Canvas.setContent(mainMenuGui); 
} 
//Bleh's little server query stopper thing
function serverselected()
{
   cancelServerQuery();
   JS_statusText.setText("A Server Has Been Selected!");
   JS_statusBar.setValue(1);
   $Pref::Client::ServerSelected = 1;
   if($Pref::Client::ServerSelected == 1)
   {
      schedule( 50000, 0, ServerRequery1);
   }
   else
   {
   }
}
function serverrequery1()
{
   JS_statusText.setText("Server List Updating in 5 seconds...");
   JS_statusBar.setValue(1);
   if($Pref::Client::ServerSelected == 1)
   {
      schedule( 1000, 0, ServerRequery2);
   }
   else
   {
   }
}
function serverrequery2()
{
   JS_statusText.setText("Server List Updating in 4 seconds...");
   JS_statusBar.setValue(0.8);
   if($Pref::Client::ServerSelected == 1)
   {
      schedule( 1000, 0, ServerRequery3);
   }
   else
   {
   }
}
function serverrequery3()
{
   JS_statusText.setText("Server List Updating in 3 seconds...");
   JS_statusBar.setValue(0.6);
   if($Pref::Client::ServerSelected == 1)
   {
      schedule( 1000, 0, ServerRequery4);
   }
   else
   {
   }
}
function serverrequery4()
{
   JS_statusText.setText("Server List Updating in 2 seconds...");
   JS_statusBar.setValue(0.4);
   if($Pref::Client::ServerSelected == 1)
   {
      schedule( 1000, 0, ServerRequery5);
   }
   else
   {
   }
}
function serverrequery5()
{
   JS_statusText.setText("Server List Updating in 1 seconds...");
   JS_statusBar.setValue(0.2);
   if($Pref::Client::ServerSelected == 1)
   {
      schedule( 1000, 0, ServerRequerytime);
   }
   else
   {
   }
}
function serverrequerytime()
{
   Canvas.getContent().query();
}
//---------------------------------------- 
function JoinServerGui::update(%this) 
{ 
   // Copy the servers into the server list. 
//   JS_queryStatus.setVisible(false); 
   JS_serverList.clear();
   %sc = getServerCount(); 
   for (%i = 0; %i < %sc; %i++) { 
      setServerInfo(%i); 
      if((getword($ServerInfo::Name,0) $= "[RTB]" && (getword($ServerInfo::MissionType,0) !$= "TBMSandbox") && $Pref::FilterRTB == 1) || $Pref::FilterRTB == 0)
      {
      if($Pref::FilterRTB == 1){
      %ServerName = $ServerInfo::Name;
      %ServerName = strreplace(%ServerName,"[RTB] ","");
      $ServerInfo::Name = %ServerName;
      }
//      if((getword($ServerInfo::PlayerCount,0) $= "0" && $Pref::ShowEmptyServer == 1) || $Pref::ShowEmptyServer == 0)
//      {
//      if((getword($ServerInfo::Password,0) != "" && $Pref::ShowPasswordedServer == 0) || $Pref::ShowPasswordedServer == 1)
//      {
//      if((getword($ServerInfo::PlayerCount,0) $= $ServerInfo::MaxPlayers && $Pref::HideFullServer == 1) || $Pref::HideFullServer == 0)
//      {
	JS_serverList.addRow(%i, 
         ($ServerInfo::Password? "Yes": "No") TAB 
         $ServerInfo::Name TAB 
         $ServerInfo::Ping TAB 
         $ServerInfo::PlayerCount @ "/" @ $ServerInfo::MaxPlayers TAB 
         $ServerInfo::Version TAB 
         $ServerInfo::GameType TAB 
         %i);  // ServerInfo index stored also 
//     }
//     }
//     }
     }
   } 
   JS_serverList.sort(0); 
//   JS_serverList.setSelectedRow(0); 
   JS_serverList.scrollVisible(1); 

   JS_joinServer.setActive(JS_serverList.rowCount() > 0); 
} 

//---------------------------------------- 
function onServerQueryStatus(%status, %msg, %value) 
{ 
   // Update query status 
   // States: start, update, ping, query, done 
   // value = % (0-1) done for ping and query states 


   switch$ (%status) { 
      case "start": 
         JS_joinServer.setActive(false); 
         JS_queryMaster.setActive(false); 
         JS_statusText.setText(%msg); 
         JS_statusBar.setValue(0); 
         JS_serverList.clear(); 

      case "ping":
         JS_statusText.setText("Ping Servers: " @ mFloor(%value*100) @"%");
         JS_statusBar.setValue(%value);
         JS_queryMaster.setActive(true); 
         JoinServerGui.update(); 

      case "query":
         JS_statusText.setText("Query Servers: " @ mFloor(%value*100) @"%");
         JS_statusBar.setValue(%value); 
         JS_queryMaster.setActive(true); 
         JoinServerGui.update(); 

      case "done": 
         JS_queryMaster.setActive(true); 
         JS_statusText.setText("Done Loading Server Information!");
         JS_statusBar.setValue(1);
         JoinServerGui.update(); 
   } 
}

function automessage()
{
	$pref::Player::Automessage = txtautomessage.getValue();
	MessageBoxOK( "Automessage", "Automessage changed sucessfully!" );
	canvas.popDialog(automessage);
}
//--- OBJECT WRITE BEGIN ---
new GuiChunkedBitmapCtrl(JoinServerGui) {
   profile = "GuiContentProfile";
   horizSizing = "width";
   vertSizing = "height";
   position = "0 0";
   extent = "640 480";
   minExtent = "8 8";
   visible = "1";
   helpTag = "0";
   bitmap = "./background.jpg";
   useVariable = "0";
   tile = "0";

   new GuiControl() {
      profile = "GuiWindowProfile";
      horizSizing = "center";
      vertSizing = "center";
      position = "92 73";
      extent = "455 334";
      minExtent = "8 8";
      visible = "1";
      variable = "$Pref::FilterRTB";
      helpTag = "0";

      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "14 67";
         extent = "24 18";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         text = "Pass";
         maxLength = "255";
      };
      new GuiButtonCtrl(btnautomessage) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "345 288";
         extent = "100 18";
         minExtent = "8 2";
         visible = "1";
         command = "canvas.pushDialog(automessage);";
         helpTag = "0";
         text = "Automessage";
         groupNum = "-1";
         buttonType = "PushButton";
      };
      new GuiButtonCtrl(JS_queryMaster) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "121 307";
         extent = "212 23";
         minExtent = "8 8";
         visible = "1";
         command = "Canvas.getContent().query();";
         helpTag = "0";
         text = "Refresh Server List";
         groupNum = "-1";
         buttonType = "PushButton";
      };
      new GuiButtonCtrl(JS_queryLan) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "121 307";
         extent = "100 23";
         minExtent = "8 8";
         visible = "0";
         command = "Canvas.getContent().queryLan();";
         helpTag = "0";
         text = "Query LAN";
         groupNum = "-1";
         buttonType = "PushButton";
      };
      new GuiButtonCtrl(JS_joinServer) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "345 307";
         extent = "100 23";
         minExtent = "8 8";
         visible = "1";
         command = "Canvas.getContent().join();";
         helpTag = "0";
         text = "Join Server";
         groupNum = "-1";
         buttonType = "PushButton";
            active = "0";
      };
      new GuiButtonCtrl(Filters) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "10 283";
         extent = "100 23";
         minExtent = "8 8";
         visible = "1";
         command = "Canvas.pushdialog(serverfilter);";
         helpTag = "0";
         text = "Filters";
         groupNum = "-1";
         buttonType = "PushButton";
            active = "0";
      };
      new GuiButtonCtrl(JS_joinServerIP) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "240 41";
         extent = "100 19";
         minExtent = "8 8";
         visible = "1";
         command = "Canvas.getContent().joinwithIP();";
         helpTag = "0";
         text = "Find Server";
         groupNum = "-1";
         buttonType = "PushButton";
            active = "0";
      };
      new GuiScrollCtrl() {
         profile = "GuiScrollProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "10 90";
         extent = "437 197";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         willFirstRespond = "1";
         hScrollBar = "alwaysOff";
         vScrollBar = "alwaysOn";
         constantThumbHeight = "0";
         childMargin = "0 0";
            defaultLineHeight = "15";

         new GuiTextListCtrl(JS_serverList) {
            profile = "GuiTextArrayProfile";
            horizSizing = "right";
            vertSizing = "bottom";
            position = "1 -220";
            extent = "418 416";
            minExtent = "8 8";
            visible = "1";
            command = "ServerSelected();";
            helpTag = "0";
            enumerate = "0";
            resizeCell = "1";
            columns = "0 30 335 380 420 540 1100 1400 1600 1800 2000";
            fitParentWidth = "1";
            clipColumnText = "0";
               noDuplicates = "false";
         };
      };
      new GuiTextEditCtrl() {
         profile = "GuiTextEditProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "98 15";
         extent = "134 18";
         minExtent = "8 8";
         visible = "1";
         variable = "Client::Password";
         helpTag = "0";
         maxLength = "255";
         historySize = "0";
         password = "0";
         tabComplete = "0";
         sinkAllKeyEvents = "0";
      };
      new GuiTextEditCtrl() {
         profile = "GuiTextEditProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "98 41";
         extent = "134 18";
         minExtent = "8 8";
         visible = "1";
         variable = "Client::JoinIP";
         helpTag = "0";
         maxLength = "15";
         historySize = "0";
         password = "0";
         tabComplete = "0";
         sinkAllKeyEvents = "0";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "12 15";
         extent = "72 18";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         text = "Join Password";
         maxLength = "255";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "12 41";
         extent = "44 18";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         text = "Server IP";
         maxLength = "255";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "269 67";
         extent = "36 18";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         text = "Players";
         maxLength = "255";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "335 67";
         extent = "38 18";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         text = "Version";
         maxLength = "255";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "412 67";
         extent = "28 18";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         text = "Game";
         maxLength = "255";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "212 67";
         extent = "20 18";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         text = "Ping";
         maxLength = "255";
      };
      new GuiButtonCtrl() {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "top";
         position = "10 307";
         extent = "100 23";
         minExtent = "8 8";
         visible = "1";
         command = "Canvas.getContent().exit();";
         helpTag = "0";
         text = "<< Back";
         groupNum = "-1";
         buttonType = "PushButton";
      };
      new GuiProgressCtrl(JS_statusBar) {
         profile = "GuiProgressProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "112 287";
         extent = "231 20";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
      };
      new GuiTextCtrl(JS_statusText) {
         profile = "GuiProgressTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "112 285";
         extent = "231 20";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         maxLength = "255";
      };
      new GuiTextCtrl() {
         profile = "GuiTextProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "90 67";
         extent = "27 18";
         minExtent = "8 8";
         visible = "1";
         helpTag = "0";
         text = "Name";
         maxLength = "255";
      };
      new GuiButtonCtrl(btnpass) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "11 67";
         extent = "32 20";
         minExtent = "8 8";
         visible = "1";
         command = "querysort(0);";
         helpTag = "0";
         text = "Pass";
         groupNum = "-1";
         buttonType = "PushButton";
            active = "0";
      };
      new GuiButtonCtrl(btnServerName) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "42 67";
         extent = "303 20";
         minExtent = "8 8";
         visible = "1";
         command = "querysort(1);";
         helpTag = "0";
         text = "Server Name";
         groupNum = "-1";
         buttonType = "PushButton";
            active = "0";
      };
      new GuiButtonCtrl(btnPing) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "344 67";
         extent = "32 20";
         minExtent = "8 8";
         visible = "1";
         command = "querysort(2);";
         helpTag = "0";
         text = "Ping";
         groupNum = "-1";
         buttonType = "PushButton";
            active = "0";
      };
      new GuiButtonCtrl(btnPlayers) {
         profile = "GuiButtonProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "375 67";
         extent = "69 20";
         minExtent = "8 8";
         visible = "1";
         command = "querysort(3);";
         helpTag = "0";
         text = "Players";
         groupNum = "-1";
         buttonType = "PushButton";
            active = "0";
      };
   };
   new GuiButtonCtrl() {
      profile = "GuiButtonProfile";
      horizSizing = "right";
      vertSizing = "bottom";
      position = "520 79";
      extent = "20 20";
      minExtent = "8 2";
      visible = "1";
      command = "getHelp(\"RTB - 3. Server Menu\");";
      helpTag = "0";
      text = "?";
      groupNum = "-1";
      buttonType = "PushButton";
   };
   new GuiButtonCtrl() {
      profile = "GuiButtonProfile";
      horizSizing = "right";
      vertSizing = "bottom";
      position = "332 87";
      extent = "100 20";
      minExtent = "8 2";
      visible = "1";
      command = "canvas.pushdialog(appearance);";
      helpTag = "0";
      text = "Appearance...";
      groupNum = "-1";
      buttonType = "PushButton";
   };
};
//--- OBJECT WRITE END ---
